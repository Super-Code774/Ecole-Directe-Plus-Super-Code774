

#windows-container  {
    /* height: max(100%, auto); */
    height: 100%;
    display: flex;
    /* min-height: 100%;
    max-height: 100%; */
    padding: 30px;
}

#windows-container #floating-portal {
    position: absolute;
    top: 0;
    left: 0;
    z-index: 1;
}


.windows-layout {
    flex: 1;
    flex-shrink: 0;
    min-height: 0;
    max-width: 100%;
    
    display: flex;
    flex-wrap: nowrap;
    gap: clamp(20px, 3vw, 50px);
    justify-content: space-between;
    align-items: stretch;
}
.windows-layout.d-row {
    flex-direction: row;
}
.windows-layout.d-column {
    flex-direction: column;
}

.windows-layout *, .windows-layout {
    min-width: 0;
}

.window {
    background-color: rgb(var(--background-color-2));
    border-radius: 15px;
    flex: 1;
    flex-shrink: 0;
    
    /* min-height: 150px; */

    display: flex;
    flex-flow: column nowrap;
    overflow: hidden;
    box-shadow: var(--box-shadow-window);

    outline: none;
    opacity: 0;
    scale: 0.85;
    /* animation: go-in 0.5s ease forwards; */
    animation: go-in 0.5s var(--timing-function-spring-effect) forwards;
    /* transition: 0.1s; */
}
.window:focus-visible {
    box-shadow: 0 0 20px rgb(var(--background-color-1));
}

.window.work-in-progress {
    animation-duration: 0s !important;
    animation-delay: 0s !important;
    background-color: transparent;
    box-shadow: none;
    border: 2px solid rgba(var(--text-color-alt), .3);
    min-height: 200px;
}
.window.work-in-progress .wip-info {
    color: rgba(var(--text-color-alt), .5);
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 100%;
    text-align: center;
    user-select: none;
}

.window.work-in-progress .wip-info a {
    color: rgba(var(--text-color-alt), .5);
    transition: .1s;
}
.window.work-in-progress .wip-info a:is(:hover, :focus-visible) {
    color: rgba(var(--text-color-alt), 1);
}

.window.appeared {
    animation: none;
    opacity: 1;
    scale: 1;
    transition: scale 0.1s, flex-grow .3s ease-in-out;
}
.window.grabbing {
    scale: 0.95;
}

.window.moving {
    position: relative;
    background: rgba(0, 240, 255, 0.14) !important;
    outline: 2px dashed rgb(98, 194, 207);
    box-shadow: none;
}
/* pour safari car il ne supporte pas le border-radius sur les outline (tt carr√© tier)*/
/* .window.moving::after {
    inset: -2px;
    top: -2px;
    bottom: -2px;
    left: -2px;
    right: -2px;
    border: 2px dashed rgb(98, 194, 207);
    border-radius: 15px;
} */
.window.moving * {
    transition: 0s !important;
    visibility: hidden !important;
    /* opacity: 0 !important;
    pointer-events: none !important; */
    /* display: none !important; */
}


#floating-portal .window {
    max-width: none;
    min-width: 0;
    opacity: 1;
    scale: 1;
    transition: scale 0.2s ease;
    animation: none;
    cursor: grabbing;
}
#floating-portal .window * {
    min-width: 0;
    cursor: grabbing;
    animation-delay: 0s;
    animation-duration: 0s;
    transition: 0s;
    transition-delay: 0s;
}

#floating-portal .window.unfloating * {
    cursor: grab;
}

.window .window-header {
    background-color: rgb(var(--background-color-1));
    min-height: 45px;
    border-radius: 15px;
    box-shadow: var(--box-shadow-window);
    isolation: isolate;
    z-index: 1;
    position: relative;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    cursor: grab;
}

.window .window-header h2 {
    text-align: center;
    font-size: var(--font-size-20);
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
}
.window .window-header:active {
    cursor: grabbing;
}
.window .window-header * {
    /* pointer-events: none; */
}

.window .window-content {
    flex: 1;
    min-height: 0;
    overflow: auto;
}

.dark :not(:root):fullscreen::backdrop {
    background-color: rgb(24, 24, 41);
}

.light :not(:root):fullscreen::backdrop {
    background-color: rgb(228, 228, 255);
}

.tritanopia :not(:root):fullscreen::backdrop {
    background-color: rgb(22, 28, 28);
}

.moveable-container:fullscreen,
.windows-layout:fullscreen {
    padding: 25px;
}

/* Remove overflow: hidden and adjust flex properties */
.window {
    background-color: rgb(var(--background-color-2));
    border-radius: 15px;
    flex: 1;
    flex-shrink: 1;
    /* Allow the window to shrink if necessary */
    min-height: 0;
    /* Allow the window to shrink below its content's height */
    max-height: 100%;
    /* Prevent the window from growing beyond its container */
    display: flex;
    flex-flow: column nowrap;
    overflow: visible;
    box-shadow: var(--box-shadow-window);
    outline: none;
    opacity: 0;
    scale: 0.85;
    animation: go-in 0.5s var(--timing-function-spring-effect) forwards;
}

/* Ensure the window content scrolls internally */
.window .window-content {
    flex: 1;
    min-height: 0;
    overflow: auto;
}

/* Allow the header to overflow */
.window .window-header {
    overflow: visible;
    position: relative;
    /* Ensure absolute children are positioned relative to this */
    z-index: 1;
    /* Keep the header above other content */
}

/* Position the snow-cap absolutely */
.snow-cap {
    /* position: absolute;
    bottom: 3px;
    width: 101%;
    height: 95px;
    pointer-events: none; */
    /* Adjust left and right positioning if necessary */
}

/* Ensure parent containers have constrained height */
#windows-container,
.windows-layout {
    height: 100%;
    max-height: 100%;
}


@media only screen and (max-width: 869px) {
    #windows-container {
        min-height: 0;
        height: auto;
        max-height: initial;
        padding: clamp(30px, 7vw, 40px) clamp(15px, 3.5vw, 30px);
        padding-bottom: 30px;
    }
    
    .windows-layout {
        flex-flow: column nowrap !important;
        flex-basis: auto;
        width: 100%;
        gap: clamp(30px, 7vw, 40px);
    }
    .window {
        max-width: 100%;
        /* min-height: 100px; */
        /* max-height: calc(80vh - 100px); = 80% hauteur du viewport - hauteur du header */
        overflow: visible;
        /* overflow: auto; */
    }
}


@keyframes go-in {
    from {
        opacity: 0;
        scale: 0.85;
    }
    to {
        opacity: 1;
        scale: 1;
    }
}